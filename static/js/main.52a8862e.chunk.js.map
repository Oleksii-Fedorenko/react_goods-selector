{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","name","id","uuidv4","App","state","selectedGoods","selectGood","setState","prevState","removeGood","selectedGood","filter","clearSelection","formatHeading","length","slice","join","at","this","className","Boolean","type","onClick","isGoodSelected","includes","cn","isSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAUMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CAAEC,KAAMD,EAAME,GAAIC,kBAM3BC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACP,GAAD,OAAkB,WAC7B,EAAKQ,UAAS,SAACC,GAAD,MAAgB,CAC5BH,cAAc,GAAD,mBAAMG,EAAUH,eAAhB,CAA+BN,U,EAIhDU,WAAa,SAACC,GAAD,OAA0B,WACrC,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC5BH,cAAeG,EAAUH,cACtBM,QAAO,SAAAZ,GAAI,OAAIA,IAASW,W,EAI/BE,eAAiB,WACf,EAAKL,SAAS,CACZF,cAAe,M,EAInBQ,cAAgB,WACd,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcY,IAAI,M,4CAI/E,WAAU,IAAD,OACCZ,EAAkBa,KAAKd,MAAvBC,cAER,OACE,qBAAKc,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BD,KAAKL,kBAEjCO,QAAQf,EAAcS,SAEpB,wBACEK,UAAU,gBACVE,KAAK,SACLC,QAASJ,KAAKN,eAHhB,wBAUJ,oBAAIO,UAAU,cAAd,SACGtB,EAAgBC,KAAI,SAAAC,GACnB,IAAMwB,EAAiB,EAAKnB,MAAMC,cAC/BmB,SAASzB,EAAKC,MAEjB,OACE,qBAEEmB,UAAWM,IAAG,oBAAqB,CACjCC,WAAYH,IAHhB,UAMGxB,EAAKC,KACN,wBACEmB,UAAU,gBACVE,KAAK,SACLC,QACEC,EACI,EAAKd,WAAWV,EAAKC,MACrB,EAAKM,WAAWP,EAAKC,MAN7B,SASGuB,EAAiB,SAAW,aAf1BxB,EAAKE,kB,GAhEV0B,IAAMC,WA4FTzB,ICpHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.52a8862e.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport cn from 'classnames';\nimport './App.scss';\n\ninterface Good {\n  name: string;\n  id: string;\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({ name: good, id: uuidv4() }));\n\ninterface State {\n  selectedGoods: string[]\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => () => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (selectedGood: string) => () => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods\n        .filter(good => good !== selectedGood),\n    }));\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  formatHeading = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.at(-1)}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"goods\">\n          <h1 className=\"goods__title\">{this.formatHeading()}</h1>\n          {\n            Boolean(selectedGoods.length)\n            && (\n              <button\n                className=\"goods__button\"\n                type=\"button\"\n                onClick={this.clearSelection}\n              >\n                Clear list\n              </button>\n            )\n          }\n\n          <ul className=\"goods__list\">\n            {goodsFromServer.map(good => {\n              const isGoodSelected = this.state.selectedGoods\n                .includes(good.name);\n\n              return (\n                <li\n                  key={good.id}\n                  className={cn('goods__list__item', {\n                    isSelected: isGoodSelected,\n                  })}\n                >\n                  {good.name}\n                  <button\n                    className=\"goods__button\"\n                    type=\"button\"\n                    onClick={\n                      isGoodSelected\n                        ? this.removeGood(good.name)\n                        : this.selectGood(good.name)\n                    }\n                  >\n                    {isGoodSelected ? 'Remove' : 'Select'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}